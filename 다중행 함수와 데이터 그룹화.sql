--SUM 함수를 이용하여 급여 합계 출력하기
SELECT SUM(SAL)
FROM EMP;

--SUM 함수를 사용하여 사원 이름과 급여 합계 출력하기
--(단일 그룹 함수가 아닙니다)
SELECT ENAME,SUM(SAL)
FROM EMP;

--추가 수당 합계 구하기

SELECT SUM(COMM)
FROM EMP;

--급여 합계 구하기


SELECT SUM(DISTINCT SAL),
        SUM(ALL SAL),
        SUM(SAL)
        FROM EMP;
        

--EMP 테이블의 데이터 개수를 출력하기

SELECT COUNT(*)
FROM EMP;

--부서 번호가 30번인 직원 수 구하기
SELECT COUNT(*)
FROM EMP
WHERE DEPTNO = 30;

--COUNT 함수를 사용하기 급여 개수 구하기(DISTINCT, ALL 사용)
SELECT COUNT(DISTINCT SAL),
       COUNT(ALL SAL),
       COUNT(SAL)
       FROM EMP;

--COUNT 함수를 사용하여 추가 수당 열 개수 출력하기
SELECT COUNT(COMM)
FROM EMP;

-- 부서 번호가 10번인 사람들의 최대 급여 출력하기

SELECT MAX(SAL)
    FROM EMP
    WHERE DEPTNO = 10;

--부서 번호가 10번인 사람들의 최소 급여 출력하기

SELECT MIN(SAL)
        FROM EMP
        WHERE DEPTNO = 10;
        
--부서 번호가 20인 사원의 입사일 중 제일 최근 입사일 출려하기

SELECT MAX(HIREDATE)
FROM EMP
WHERE DEPTNO = 20;


--부서 번호가 20인 사원의 입사일 중 제일 오래된 입사일 출력

SELECT MIN(HIREDATE)
FROM EMP
WHERE DEPTNO = 20;

--부서 번호가 30인 사원들의 평균 급여 출력

SELECT AVG(SAL)
FROM EMP
WHERE DEPTNO = 30;

--DISTINCT로 중복을 제거한 급여 열의 평군 급여 구하기

SELECT AVG(DISTINCT SAL)
FROM EMP
WHERE DEPTNO = 30;

--집행 연산자를 사용하여 각 부서별 평균 급여 출력하기

SELECT AVG(SAL),'10' AS DEPTNO FROM EMP WHERE DEPTNO = 10
UNION ALL
SELECT AVG(SAL),'20' AS DEPTNO FROM EMP WHERE DEPTNO = 20
UNION ALL
SELECT AVG(SAL),'30' AS DEPTNO FROM EMP WHERE DEPTNO = 30;

--GROUP BY를 사용하여 부서별 평균급여 출력하기

SELECT AVG(SAL),DEPTNO
FROM EMP
GROUP BY DEPTNO;

SELECT DEPTNO,JOB,AVG(SAL)
FROM EMP
GROUP BY DEPTNO, JOB
ORDER BY DEPTNO, JOB;

--GROUP BY 절에 없는 열을 SELECT절에 포함할 경우 ( 에러)
SELECT ENAME, DEPTNO , AVG(SAL)
FROM EMP
GROUP BY DEPTNO;

--GROUP BY 절에 조건을 줄때 HAVING절

SELECT  DEPTNO, JOB, AVG(SAL)
FROM EMP
GROUP BY DEPTNO, JOB
HAVING AVG(SAL) >=2000
ORDER BY DEPTNO, JOB;

--HAVING절을 대신 WHERE절을 잘못 사요앴을 경우(에러)

SELECT DEPTNO,JOB,AVG(SAL)
FROM EMP
WHERE AVG(SAL) >= 2000
GROUP BY DEPTNO,JOB
ORDER BY DEPTNO,JOB;
--WHERE절을 사용하지않고 HAVING절만 사용한 경우
SELECT DEPTNO,JOB,AVG(SAL)
FROM EMP
GROUP BY DEPTNO, JOB
HAVING AVG(SAL) > 2000
ORDER BY DEPTNO,JOB;

--WHERE절과 HAVING절을 모두 사용한 경우
SELECT DEPTNO,JOB,AVG(SAL)
FROM EMP
WHERE SAL <= 3000
GROUP BY DEPTNO,JOB
HAVING AVG(SAL) >= 2000
ORDER BY DEPTNO,JOB;

--
SELECT DEPTNO,JOB,SAL
FROM EMP
WHERE SAL <= 3000
ORDER BY DEPTNO,JOB;

SELECT  DEPTNO,JOB,COUNT(*), MAX(SAL), SUM(SAL),AVG(SAL)
FROM EMP
GROUP BY DEPTNO,JOB
ORDER BY DEPTNO,JOB;

--ROLLUP
SELECT DEPTNO,JOB,COUNT(*),MAX(SAL),SUM(SAL),AVG(SAL)
FROM EMP
GROUP BY ROLLUP(DEPTNO, JOB);

--CUBE
SELECT DEPTNO,JOB,COUNT(*),MAX(SAL),SUM(SAL),AVG(SAL)
FROM EMP
GROUP BY CUBE(DEPTNO, JOB)
ORDER BY DEPTNO,JOB;

SELECT DEPTNO,JOB,COUNT(*)
FROM EMP
GROUP BY DEPTNO,ROLLUP(JOB);

--JOB 을 그룹화한 후 ROLLUP함수에 DEPTNO 지정하기
SELECT DEPTNO,JOB,COUNT(*)
FROM EMP
GROUP BY JOB,ROLLUP(DEPTNO);

--GROUPING SETS 함수를 사용하여 열별로 그룹으로 묶어 출력하기

SELECT DEPTNO,JOB,COUNT(*)
FROM EMP
GROUP BY GROUPING SETS(DEPTNO,JOB)
ORDER BY DEPTNO, JOB;

SELECT DEPTNO,JOB,COUNT(*),MAX(SAL),SUM(SAL),AVG(SAL),
GROUPING(DEPTNO),
GROUPING(JOB)
FROM EMP
GROUP BY CUBE(DEPTNO, JOB)
ORDER BY DEPTNO,JOB;

--DEPTNO,JOB을 함께 명시한 GROUPING_ID 함수 사용하기
SELECT DEPTNO,JOB,COUNT(*),SUM(SAL),
        GROUPING(DEPTNO),
        GROUPING(JOB),
        GROUPING_ID(DEPTNO,JOB)
        FROM EMP
        GROUP BY CUBE(DEPTNO, JOB)
        ORDER BY DEPTNO, JOB;
        
--LISTAGG 함수

SELECT ENAME
FROM EMP
WHERE DEPTNO = 10;

--그룹바이절로 그룹화하여 부서번호와 사원 이름 출력
SELECT DEPTNO,ENAME
FROM EMP
GROUP BY DEPTNO,ENAME;


SELECT DEPTNO,
    LISTAGG(ENAME,',')
    WITHIN GROUP(ORDER BY SAL DESC) AS ENAME
    FROM EMP
    GROUP BY DEPTNO;
--부서별 직책별로 그룹화하여 최고 급여 데이터 출력하기

    SELECT DEPTNO,JOB,MAX(SAL)
    FROM EMP
    GROUP BY DEPTNO,JOB
    ORDER BY DEPTNO,JOB;
    
--PIVOT 함수
SELECT *
FROM (SELECT DEPTNO,JOB,SAL FROM EMP)
PIVOT(MAX(SAL)
FOR DEPTNO IN ( 10,20,30)
)
ORDER BY JOB;

--
SELECT *
FROM(SELECT JOB,DEPTNO,SAL FROM EMP)
PIVOT(MAX(SAL)
FOR JOB IN ('CLERK' AS  CLERK,
            'SALESMAN' AS SALESMAN,
            'PRESIDENT' AS PRESIDENT,
            'MANAGER' AS MANAGER,
            'ANALYST' AS ANALYST)
            )
            ORDER BY DEPTNO;
           

--
SELECT *
FROM(SELECT DEPTNO,
        MAX(DECODE(JOB,'CLERK',SAL)) AS "CLERK",
        MAX(DECODE(JOB,'SALESMAN',SAL)) AS "SALESMAN",
        MAX(DECODE(JOB,'PRESIDENT',SAL)) AS "PRESIDENT",
        MAX(DECODE(JOB,'MANAGER',SAL)) AS "MANAGER",
        MAX(DECODE(JOB,'ANALYST', SAL)) AS "ANALYST"
        FROM EMP
        GROUP BY DEPTNO
        ORDER BY DEPTNO)
        UNPIVOT(
        SAL FOR JOB IN (CLERK,SALESMAN,PRESIDENT,MANAGER,ANALYST))
        ORDER BY DEPTNO,JOB;